import { params } from '@nanostores/i18n';

export enum NS {
  WEBAPP = 'webapp',
}

export const baseTranslation = {
  deleteAppointmentAlert: '',
  warnOneTimeOrderAppointmentLimit: '',
  meetings: '',
  neurologist: '',
  doctorShmarhaliova: '',
  change: '',
  cancelAppointmentAlert: '',
  cancel: '',
  appointmentListEmpty: '',
  makeAppointment: '',
  iHaveActivationCode: '',
  youHaveStoppedBuyingThisProduct: '',
  copied: '',
  errorHappened: '',
  reloadPage: '',
  ifErrorOccuredAgain: '',
  errorYouHaveAlreadyExistingOrder: '',
  yourSubscriptionHasEndedAlert: '',
  errorYouDontHaveActiveOrder: '',
  openViaTgBot: '',
  dayPlaceholder: '',
  monthPlaceholder: '',
  yearPlaceholder: '',
  updateAppointmentDataBtn: '',
  createAppointmentDataBtn: '',
  createAppointmentFormTitle: '',
  updateAppointmentFormTitle: '',
  complaints: '',
  validationRequiredField: '',
  unexpectedError: '',
  chronicDiseases: '',
  whichMedicineTook: '',
  whenComplaintsStarted: '',
  scheduleMeeting_emptyListText: '',
  scheduleMeeting_confirmButtonText: '',
  scheduleMeeting_cancelButtonText: '',
  scheduleMeeting_goToNextAvailableDayText: '',
  scheduleMeeting_noFutureTimesText: '',
  scheduleMeeting_selectedButtonText: '',

  appointmentError_tooEarly: '',
  appointmentError_occupied: '',
  appointmentError_hasActive: '',
  appointmentError_cannotCreateAppointmentBehindOrderExpirationDate: '',
  appointmentError_outOfWorkingHours: '',
  appointmentError_cannotDeleteNotActiveAppointment: '',
  appointmentError_cannotUpdateNotActiveAppointment: '',
  appointmentError_oneTimeOrderCannotCreateTwice: '',

  priceLabel: params('{price}'),
  orderBtn: '',
  activateBtn: '',
  activationCodeLabel: '',
  surname: '',
  name: '',
  patronymic: '',
  birthDate: '',
  phoneLabel: '',
  emailLabel: '',
  validationEmailError: '',

  orderError_hasActive: params('{userId}{email}'),
  orderError_invalidActivationCode: params(''),
  orderError_codeExpired: params(''),
  orderError_cannotUpdateNotActiveOrder: params(''),

  blockReason_maxAttempts: params(''),
  blockReason_frequency: params('{date}'),
  goToPaymentBtn: '',
};
