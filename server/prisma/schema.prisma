// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["linux-musl-openssl-3.0.x", "linux-musl-arm64-openssl-3.0.x", "darwin"]
}

model User {
  id              Int           @id @default(autoincrement())
  name            String?
  surname         String?
  patronymic      String?
  birthDate       DateTime?
  messageThreadId Int?
  botChatId       Int?
  phone           String?
  email           String?
  order           Order[]
  appointment     Appointment[]
}

model Product {
  id                   Int              @id @default(autoincrement())
  name                 String           @db.Text
  description          String           @db.Text
  price                Float
  memberQty            Int
  subscriptionDuration Int
  order                Order[]
  activationCode       ActivationCode[]
}

enum OrderStatus {
  WAITING_FOR_PAYMENT
  ACTIVE
  DONE
}

model Order {
  id                 Int              @id @default(autoincrement())
  user               User             @relation(fields: [userId], references: [id])
  userId             Int
  product            Product          @relation(fields: [productId], references: [id])
  productId          Int
  status             OrderStatus
  createdAt          DateTime
  subscriptionEndsAt DateTime?
  appointment        Appointment[]
  activationCode     ActivationCode[]
}

enum AppointmentStatus {
  ACTIVE
  DELETED
  DONE
}

model Appointment {
  id                Int               @id @default(autoincrement())
  order             Order             @relation(fields: [orderId], references: [id])
  orderId           Int
  user              User              @relation(fields: [userId], references: [id])
  userId            Int
  complaints        String            @db.MediumText
  complaintsStarted String            @db.MediumText
  medicine          String            @db.MediumText
  chronicDiseases   String            @db.MediumText
  time              DateTime
  timezoneOffset    Int               @default(0)
  status            AppointmentStatus
  calendarEventId   String?
  report            String?           @db.MediumText
  treatment         String?           @db.MediumText
}

model ActivationCode {
  id        Int      @id @default(autoincrement())
  code      Int
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  invalidAt DateTime
}

model TelegrafSessions {
  key     String @id
  session String
}

model Admin {
  id       Int    @id @default(autoincrement())
  name     String
  password String
}
